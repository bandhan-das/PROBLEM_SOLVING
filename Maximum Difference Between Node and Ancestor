/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
 /**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     struct TreeNode *left;
 *     struct TreeNode *right;
 * };
 */
 class Solution{
 public:
  int maxDiff;
  void findmaxDiffUtill(TreeNode* root, TreeNode* child){
     if(root==NULL || child == NULL) return;
     maxDiff=max(maxDiff, abs(root->val-child->val));
     findmaxDiffUtill(root, child->left);
     findmaxDiffUtill(root, child->right);
 }
void findmaxDiff(TreeNode* root){
    if(root == NULL) return;
    findmaxDiffUtill(root, root->left);
    findmaxDiffUtill(root, root->right);
    findmaxDiff(root->left);
    findmaxDiff(root->right);
}
int maxAncestorDiff(TreeNode* root) {
    maxDiff=-1;   
    findmaxDiff(root);
    return maxDiff;
}
};
